// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

struct Cube
{
    float3 position;
    float4 color;
};

float rand(float2 co)
{
    return (frac(sin(dot(co.xy, float2(12.9898, 78.233))) * 43758.5453)) * 1;
}

RWStructuredBuffer<Cube> cubes;

float2 iResolution;
float iRepetitions;

[numthreads(10,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    Cube cube = cubes[id.x];
    float xPos = id.x / iResolution.x;
    
    for (int i = 0; i < iRepetitions; i++)
    {
        float zPos = rand(float2(xPos, cube.color.z));
        cube.position.z = zPos;
    
        float r = rand(float2(cube.color.r, cube.color.g));
        float g = rand(float2(cube.color.g, cube.color.b));
        float b = rand(float2(cube.color.b, cube.color.r));
    
        cube.color = float4(r, g, b, 1.0);
    }

    
    cubes[id.x] = cube;

}
